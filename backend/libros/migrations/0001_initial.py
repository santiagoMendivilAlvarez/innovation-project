# Generated by Django 5.2.4 on 2025-09-13 04:25

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Ingrese el nombre de la categoría (máximo 100 caracteres).', max_length=100, unique=True, verbose_name='Nombre de la Categoría')),
                ('descripcion', models.CharField(blank=True, help_text='Ingrese una breve descripción de la categoría.', max_length=255, null=True, verbose_name='Descripción')),
                ('activa', models.BooleanField(default=True, help_text='Indica si la categoría está activa.', verbose_name='Activa')),
            ],
            options={
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
            },
        ),
        migrations.CreateModel(
            name='Libro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(help_text='Ingrese el título del libro (máximo 200 caracteres).', max_length=200, verbose_name='Título')),
                ('autor', models.CharField(help_text='Ingrese el nombre del autor (máximo 100 caracteres).', max_length=100, verbose_name='Autor')),
                ('isbn', models.CharField(help_text='Ingrese el ISBN del libro (13 caracteres).', max_length=13, unique=True, verbose_name='ISBN')),
                ('imagen_url', models.CharField(blank=True, help_text='Ingrese la URL de la imagen de portada del libro.', max_length=255, null=True, verbose_name='URL de la Imagen')),
                ('descripcion', models.TextField(blank=True, help_text='Ingrese una breve descripción del libro.', null=True, verbose_name='Descripción')),
                ('fecha_publicacion', models.DateField(help_text='Ingrese la fecha de publicación del libro.', verbose_name='Fecha de Publicación')),
                ('paginas', models.PositiveIntegerField(help_text='Ingrese el número total de páginas del libro.', verbose_name='Número de Páginas')),
                ('precio', models.DecimalField(decimal_places=2, help_text='Ingrese el precio del libro.', max_digits=10, verbose_name='Precio')),
                ('calificacion', models.FloatField(blank=True, help_text='Ingrese la calificación del libro (0.0 a 5.0).', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)], verbose_name='Calificación')),
                ('disponible', models.BooleanField(default=True, help_text='Indica si el libro está disponible para la venta.', verbose_name='Disponible')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se creó el registro.', verbose_name='Fecha de Creación')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última actualización del registro.', verbose_name='Fecha de Actualización')),
                ('categoria', models.ForeignKey(help_text='La categoría a la que pertenece el libro.', on_delete=django.db.models.deletion.CASCADE, related_name='libros', to='libros.categoria', verbose_name='Categoría')),
            ],
            options={
                'verbose_name': 'Libro',
                'verbose_name_plural': 'Libros',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='FuenteLibro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plataforma', models.CharField(help_text='Ingrese el nombre de la fuente (máximo 100 caracteres).', max_length=100, verbose_name='Nombre de la Fuente')),
                ('url_libro', models.CharField(help_text='Ingrese la URL de la fuente.', max_length=255, verbose_name='URL de la Fuente')),
                ('precio', models.FloatField(help_text='Ingrese el precio del libro en esta fuente.', validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Precio en la Fuente')),
                ('moneda', models.CharField(help_text='Ingrese la moneda del precio (por ejemplo, USD, EUR).', max_length=10, verbose_name='Moneda')),
                ('disponible', models.BooleanField(default=True, help_text='Indica si el libro está disponible en esta fuente.', verbose_name='Disponible')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última actualización del registro.', verbose_name='Fecha de Actualización')),
                ('libro', models.ForeignKey(help_text='El libro al que pertenece esta fuente.', on_delete=django.db.models.deletion.CASCADE, related_name='fuentes', to='libros.libro', verbose_name='Libro')),
            ],
            options={
                'verbose_name': 'Fuente del Libro',
                'verbose_name_plural': 'Fuentes del Libro',
            },
        ),
        migrations.CreateModel(
            name='Resena',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuente_resena', models.CharField(help_text='Ingrese la fuente de la reseña (máximo 100 caracteres).', max_length=100, verbose_name='Fuente de la Reseña')),
                ('contenido_resena', models.CharField(help_text='Ingrese el contenido de la reseña (máximo 500 caracteres).', max_length=1064, verbose_name='Contenido de la Reseña')),
                ('calificacion', models.FloatField(help_text='Ingrese la calificación de la reseña (0.0 a 5.0).', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)], verbose_name='Calificación')),
                ('autor_resena', models.CharField(help_text='Ingrese el nombre del autor de la reseña (máximo 100 caracteres).', max_length=100, verbose_name='Autor de la Reseña')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se creó el registro.', verbose_name='Fecha de Creación')),
                ('libro', models.ForeignKey(help_text='El libro al que pertenece esta reseña.', on_delete=django.db.models.deletion.CASCADE, related_name='resenas', to='libros.libro', verbose_name='Libro')),
            ],
        ),
    ]
